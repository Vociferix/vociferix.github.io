searchState.loadedDescShard("pars", 0, "Parser-combinator library for Rust.\nContains the error value\nA parsing error.\nThe error type that is produced by the parser on failure.\nA type implementing <code>ErrorSeed</code> for all error and input …\nA parsing error descriptor that can be used to build a …\nConverts to an error using <code>Error::expected_eof</code>.\nType returned by a parser when parsing fails.\nA parsable symbol stream.\nThe <code>Input</code> this type will convert to.\nTrait for types that can be directly converted into an …\nConverts to an error using <code>Error::invalid_input</code>.\nConverts to an error using <code>Error::need_more_input</code>.\nContains the success value\nThe <code>Result</code> type returned by a parser.\nAdditional convenience methods for <code>PResult</code>.\nTrait implemented by all parsers.\nThe value type that is produced by the parser on success.\nInput derived from other input by repeatedly applying a …\nA slice of parser input.\nType returned by a parser when parsing succeeds.\nThe symbol type this input provides a stream of.\nThe symbol type of the <code>Input</code> this type will convert to.\nAdvances the stream by a given number of symbols.\nAdvances the stream by a given number of symbols.\nGeneric parser and combinator building blocks.\nGets the end position of the <code>Span</code>.\nCreates an error representing that the end of input was …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCombines this error seed with input to create a parsing …\nConvert to an <code>Input</code> type.\nCreates an error representing that the input is unparsable.\nReturns <code>true</code> if the stream is at the end of input.\nReturns <code>true</code> if the stream is at the end of input.\nChecks if the <code>Span</code> is empty.\nCreates a new input stream with mapped values.\nCreates a new input stream with mapped values.\nCreates an error representing the need for more input.\nCreates a new <code>ParsedInput</code>.\nCreates a new <code>Span</code> over the input between <code>begin</code> and <code>end</code>.\nGets the next symbol in the stream.\nParses the provided input.\nCompares the position of two inputs for positional …\nGets the input position where the error occured.\nThe <code>pars</code> prelude.\nReturns the remaining number of symbols, if known.\nReturns the remaining number of symbols, if known.\nGets the start position of the <code>Span</code>.\n<code>&#39;A&#39;</code>\nAcknowledgement\n<code>&#39;&amp;&#39;</code>\n<code>&#39;\\&#39;&#39;</code>\nAn ASCII character. It wraps a <code>u8</code>, with the highest bit …\n<code>AsciiStr</code> represents a byte or string slice that only …\nA growable string stored as an ASCII encoded buffer.\n<code>&#39;*&#39;</code>\n<code>&#39;@&#39;</code>\n<code>&#39;B&#39;</code>\n<code>&#39;\\&#39;</code>\nBackspace\nbell / alarm / audible\n<code>&#39;]&#39;</code>\n<code>&#39;[&#39;</code>\n<code>&#39;C&#39;</code>\nCancel\n<code>&#39;^&#39;</code>\n<code>&#39;\\r&#39;</code>\n<code>&#39;:&#39;</code>\n<code>&#39;,&#39;</code>\n<code>&#39;}&#39;</code>\n<code>&#39;{&#39;</code>\n<code>&#39;D&#39;</code>\nDevice control 1, often XON\nDevice control 2\nDevice control 3, Often XOFF\nDevice control 4\nDelete\nData Link Escape\n<code>&#39;$&#39;</code>\n<code>&#39;.&#39;</code>\n<code>&#39;E&#39;</code>\nEnd of Medium\nEnquiry\nEnd Of Transmission\nEscape\nEnd of Transmission Block\nEnd of TeXt\n<code>&#39;=&#39;</code>\nContains the error value\n<code>&#39;!&#39;</code>\n<code>&#39;F&#39;</code>\nForm Feed\nFile Separator\n<code>&#39;G&#39;</code>\nGroup Separator\n<code>&#39;</code>’`\n<code>&#39;&gt;&#39;</code>\n<code>&#39;H&#39;</code>\n<code>&#39;#&#39;</code>\n<code>&#39;I&#39;</code>\n<code>&#39;J&#39;</code>\n<code>&#39;K&#39;</code>\n<code>&#39;L&#39;</code>\n<code>&#39;&lt;&#39;</code>\n<code>&#39;\\n&#39;</code>\nASCII input that tracks location information.\n<code>&#39;M&#39;</code>\n<code>&#39;-&#39;</code>\n<code>&#39;N&#39;</code>\nNegative AcKnowledgement\n<code>&#39;\\0&#39;</code>\n<code>&#39;O&#39;</code>\nContains the success value\n<code>&#39;P&#39;</code>\n<code>&#39;)&#39;</code>\n<code>&#39;(&#39;</code>\n<code>&#39;%&#39;</code>\n<code>&#39;+&#39;</code>\n<code>&#39;Q&#39;</code>\n<code>&#39;?&#39;</code>\n<code>&#39;&quot;&#39;</code>\n<code>&#39;R&#39;</code>\nRecord Separator\n<code>&#39;S&#39;</code>\nShift In\nShift Out\nStart Of Heading\nStart Of teXt\nSubstitute\nSynchronous idle\n<code>&#39;;&#39;</code>\n<code>&#39;/&#39;</code>\n<code>&#39; &#39;</code>\n<code>&#39;T&#39;</code>\n<code>&#39;\\t&#39;</code>\n<code>&#39;~&#39;</code>\n<code>&#39;U&#39;</code>\nUnit Separator\n<code>&#39;_&#39;</code>\n<code>&#39;V&#39;</code>\nVertical tab\n<code>&#39;|&#39;</code>\n<code>&#39;W&#39;</code>\n<code>&#39;X&#39;</code>\n<code>&#39;Y&#39;</code>\n<code>&#39;Z&#39;</code>\n<code>&#39;0&#39;</code>\n<code>&#39;1&#39;</code>\n<code>&#39;2&#39;</code>\n<code>&#39;3&#39;</code>\n<code>&#39;4&#39;</code>\n<code>&#39;5&#39;</code>\n<code>&#39;6&#39;</code>\n<code>&#39;7&#39;</code>\n<code>&#39;8&#39;</code>\n<code>&#39;9&#39;</code>\n<code>&#39;a&#39;</code>\nConverts an ASCII character into a <code>u8</code>.\nConverts <code>&amp;self</code> into a byte slice.\nConverts an ASCII character into a <code>char</code>.\nReturns an unsafe mutable pointer to the <code>AsciiStr</code>’s …\nReturns the entire string as mutable slice of <code>AsciiChar</code>s.\nUnicode has printable versions of the ASCII control codes, …\nReturns a raw pointer to the <code>AsciiStr</code>’s buffer.\nReturns the entire string as slice of <code>AsciiChar</code>s.\nConverts <code>&amp;self</code> to a <code>&amp;str</code> slice.\nCreate an ASCII character or string, checked at compile …\n<code>&#39;b&#39;</code>\n<code>&#39;c&#39;</code>\nReturns the number of bytes that this ASCII string buffer …\nReturns an iterator over the characters of the <code>AsciiStr</code>.\nReturns an iterator over the characters of the <code>AsciiStr</code> …\nTruncates the ASCII string, setting length (but not …\nGets the current column number in the source input.\n<code>&#39;d&#39;</code>\n<code>&#39;e&#39;</code>\nCompares two characters case-insensitively.\nCompares two strings case-insensitively.\n<code>&#39;f&#39;</code>\nReturns the first character if the string is not empty.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an ASCII character from a <code>u8</code>, <code>char</code> or other …\nConverts anything that can represent a byte slice into an …\nConverts anything that can represent a byte buffer into an …\nConstructs an ASCII character from a <code>u8</code>, <code>char</code> or other …\nConverts anything that can be represented as a byte slice …\nConverts a vector of bytes to an <code>AsciiString</code> without …\nCreates a new <code>AsciiString</code> from a length, capacity and …\n<code>&#39;g&#39;</code>\n<code>&#39;h&#39;</code>\n<code>&#39;i&#39;</code>\nInserts an ASCII character into the buffer at position <code>idx</code>.\nInserts the given ASCII string at the given place in this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a <code>Box&lt;AsciiStr&gt;</code> into a <code>AsciiString</code> without …\nConverts this <code>AsciiString</code> into a <code>Box</code><code>&lt;</code><code>AsciiStr</code><code>&gt;</code>.\nCheck if the character is a letter (a-z, A-Z)\nCheck if the character is a letter or number\nCheck if the character is a letter (a-z, A-Z).\nCheck if the character is a letter or number\nCheck if the character is a space or horizontal tab\nCheck if the character is a control character\nCheck if the character is a number (0-9)\nChecks if the character is printable (except space)\nChecks if the character is a valid hex digit\nChecks if the character is alphabetic and lowercase (a-z).\nChecks if the character is printable (including space)\nChecks if the character is punctuation\nChecks if the character is alphabetic and uppercase (A-Z).\nCheck if the character is a ’ ’, ‘\\t’, ‘\\n’, …\nCheck if the character is a digit in the given radix.\nReturns true if the ASCII slice contains zero bytes.\nReturns true if the ASCII string contains zero bytes.\nChecks if the character is alphabetic and lowercase (a-z).\nChecks if the character is alphabetic and uppercase (A-Z).\nCheck if the character one of ’ ’, ‘\\t’, ‘\\n’, …\n<code>&#39;j&#39;</code>\n<code>&#39;k&#39;</code>\n<code>&#39;l&#39;</code>\nReturns the last character if the string is not empty.\nReturns the number of characters / bytes in this ASCII …\nReturns the number of bytes in this ASCII string.\nGets a <code>Span</code> containing the current line in the source …\nGets the current line number in the source input.\nReturns an iterator over the lines of the <code>AsciiStr</code>, which …\n<code>&#39;m&#39;</code>\nReplaces letters <code>A</code> to <code>Z</code> with <code>a</code> to <code>z</code>\nReplaces uppercase letters with their lowercase equivalent.\nReplaces letters <code>a</code> to <code>z</code> with <code>A</code> to <code>Z</code>\nReplaces lowercase letters with their uppercase equivalent.\n<code>&#39;n&#39;</code>\nCreate an <code>AsciiChar</code> from a <code>char</code>, panicking if it’s not …\nCreates a new, empty ASCII string buffer without …\nCreates a new <code>LocInput</code> from some source input.\n<code>&#39;o&#39;</code>\n<code>&#39;p&#39;</code>\nRemoves the last character from the ASCII string buffer …\nGets the current position of the source input.\nAdds the given ASCII character to the end of the ASCII …\nPushes the given ASCII string onto this ASCII string …\n<code>&#39;q&#39;</code>\n<code>&#39;r&#39;</code>\nRemoves the ASCII character at position <code>idx</code> from the …\nReserves capacity for at least <code>additional</code> more bytes to be …\nReserves the minimum capacity for exactly <code>additional</code> more …\n<code>&#39;s&#39;</code>\nShrinks the capacity of this ASCII string buffer to match …\nReturns an iterator over parts of the <code>AsciiStr</code> separated …\n<code>&#39;t&#39;</code>\nMaps letters A-Z to a-z and returns any other character …\nReturns a copy of this string where letters ‘A’ to ‘Z…\nCopies the content of this <code>AsciiStr</code> into an owned …\nMaps letters a-z to A-Z and returns any other character …\nReturns a copy of this string where letters ‘a’ to ‘z…\nReturns an ASCII string slice with leading and trailing …\nReturns an ASCII string slice with trailing whitespace …\nReturns an ASCII string slice with leading whitespace …\nShortens a ASCII string to the specified length.\n<code>&#39;u&#39;</code>\n<code>&#39;v&#39;</code>\n<code>&#39;w&#39;</code>\nCreates a new ASCII string buffer with the given capacity. …\n<code>&#39;x&#39;</code>\n<code>&#39;y&#39;</code>\n<code>&#39;z&#39;</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn <code>Iterator</code> over repeated applications of a parser.\nAn <code>Iterator</code> over repeated applications of a parser.\nAn <code>Iterator</code> over repeated applications of a parser.\nAn <code>Iterator</code> over repeated applications of a parser.\nAn <code>Iterator</code> over repeated applications of a parser.\nCreates a parser that will match exactly one of its …\nCreates a parser that is repeated a constant number of …\nCreates a parser that is repeated a number of times within …\nCreates a parser that is repeated as many times as …\nCreates a parser that is repeated at east once.\nCreates a parser that is repeated until a sentinel is …\nCreates a parser that is repeated a set number of times.\nCreates a parser that must consume all input.\nCreates a parser that unconditionally produces a specific …\nA parser that succeeds on empty input, and fails otherwise.\nCreates a parser whose parsing error is converted via <code>Into</code>.\nCreates a parser that unconditionally produces an error.\nMaps the result of a parser onto a combinator to produce a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a parser that is repeated a number of times within …\nCreates a parser that is repeated as many times as …\nCreates a parser that is repeated at least once.\nCreates a parser that is repeated until a sentinel is …\nCreates a parser whose parsed result is transformed.\nCreates a parser that transforms a parsing error.\nCreates a parser whose result is transformed.\nCreates a parser whose parsed result is converted via <code>Into</code>.\nCreates a parser whose parsed result is converted via …\nCreates a parser that returns a fallback value instead of …\nCreates a parser that returns a fallback value instead of …\nCreates a parser that returns a fallback value instead of …\nA parser that extracts one symbol from the input stream.\nCreates a parser that is repeated a set number of times.\nCreates a parser whose parsed result or parsing error are …\nCreates a parser whose parsed result is converted via …\nCreates a parser that matches a sequence of parsers.\nCreates a parser that also returns a span of the input …\nCreates a parser that also returns a span of the input …\nCreates a parser that takes a number of symbols from the …\nMaps the result of a parser onto a combinator to produce a …\nCreates a parser that is repeated a number of times within …\nCreates a parser that is repeated as many times as …\nCreates a parser that is repeated at least once.\nCreates a parser that is repeated until a sentinel is …\nCreates a parser whose parsed result is fallibly …\nCreates a parser that is repeated a set number of times.\nCreates a parser that attempts to match input verbatim.\nConverts a parser to produce a different return value.\nConverts a parser to produce a different return value, via …\nConverts a parser to produce a different return value, via …\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a parser that will match exactly one of its …\nCreates a parser that matches a sequence of parsers.\nContains the error value\nUnicode input that tracks location information.\nContains the success value\nGets the current column number in the source input.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a <code>Span</code> containing the current grapheme cluster in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets a <code>Span</code> containing the current line in the source …\nGets the current line number in the source input.\nParsers that replace invalid Unicode input with the …\nCreates a new <code>LocInput</code> from some source input.\nGets the current position of the source input.\nUnicode property definitions and combinators.\nParsers that treat any invalid Unicode as a parse error.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.\nGets the property value of a code point.")